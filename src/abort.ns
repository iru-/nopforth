\ SPDX-License-Identifier: MIT
\ Copyright (c) 2018-2024 IruatÃ£ Martins dos Santos Souza

0 value 'warm
: warm   'warm dup if execute then  bye ;

: input-start? ( a u -> bool )   over inbuf @ = ;

: rewind-line ( a u -> a' u' )
   input-start? if  exit  then
   over 1@ 10 = if  1 advance exit  then
   -1 advance rewind-line ;

: -skip-ws ( a u -> a' u' )
   input-start? if  exit  then
   over 1@ 32 > if  exit  then
   -1 advance -skip-ws ;

: -scan-ws ( a u -> a' u' )
   input-start? if  exit  then
   over 1@ 32 <= if  exit  then
   -1 advance -scan-ws ;

: .abortline
   inbuf @ inpos @ +  0 -scan-ws -skip-ws dup push  rewind-line  pop - 1 +
   type cr [char] ? emit cr ;

: (abort)   reset-input resetstacks warm ;
: abort   .abortline (abort) ;
: ?abort ( flag msg # -> )
   2push if  2pop println (abort)  then  2pop 2drop ;
