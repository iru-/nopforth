\ SPDX-License-Identifier: MIT
\ Copyright (c) 2018-2022 IruatÃ£ Martins dos Santos Souza

forth
: create-file ( a u mode -> fd )       push s>z pop creat ;
: open-file ( a u flags mode -> fd )   2push s>z 2pop open ;

: read-byte ( fd -> b err )
   [ here dup 0 1, ] lit  1 read  1 ~= if  0 true exit  then
   lit 1@ false ;

: read-line ( fd a u -> u' )
   asave  swap a!
   swap over for   \ u fd
     dup read-byte if  drop drop  pop -  arest exit  then
     dup 1!+  10 = if  drop  pop -  1 +  arest exit  then
   next
   drop arest ;

: write-byte ( fd byte -> n )
   [ here dup 0 1, ] lit  1!  lit 1 write ;

: write-line ( fd a u -> n )
   2push dup 2pop  write  dup 0 < if  nip exit  then
   swap 10 write-byte  1 ~= if  drop -1 exit  then 1 + ;

: file-position ( fd -> n' )   push 0 1 pop lseek ;

( File loading )
: input@ ( -> fd buf tot used pos 'refill )
   infd @ inbuf @ intot @ inused @ inpos @ 'refill @ ;

: input! ( fd buf tot used pos 'refill -> )
   'refill ! inpos ! inused ! intot ! inbuf ! infd ! ;

: save-input
   pop pop  input@ push push push push push push  push push ;

: restore-input
   pop pop  pop pop pop pop pop pop input!  push push ;

: fsize ( fd -> u )   push 0 2 pop lseek ;

: fmap ( fd -> a u ) \ PROT_READ MAP_PRIVATE
   dup push fsize  0 over 1 2 pop 0 mmap  swap ;


\ After a file is mapped for inclusion the input state is intot = filesize,
\ inused = 0, inpos = 0. Each refill then advances inused to after the next
\ newline. Hence, even though the whole file is available at the onset, the
\ interpreter sees only one line at a time.

: ?skip ( a u -> a' )   0 = if exit then   dup 1@ 10 = if 1 + then ;
: eolscan ( -> a )   inbuf @ intot @  inused @ advance 10 scan  ?skip ;
: frefill ( -> n )   eolscan  inbuf @ -  dup inused @ -  swap inused ! ;

: included ( a u -> err )
   0 0 open-file dup 0 < if exit then
   save-input  dup dup fmap  over -1 = if drop exit then
   0 0 ['] frefill input!
   push rel pop
   close drop  inbuf @ intot @ munmap drop
   restore-input  false ;

: include   10 parse included " can't include file" ?abort ;
